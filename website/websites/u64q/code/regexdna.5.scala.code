<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://benchmarksgame.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Marceli Narcyz</span>
<span class="hl com">*/</span>

<span class="hl kwa">import</span> scala<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>_
<span class="hl kwa">import</span> scala<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>duration<span class="hl opt">.</span>_
<span class="hl kwa">import</span> java<span class="hl opt">.</span>io<span class="hl opt">.</span>BufferedReader
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>concurrent<span class="hl opt">.</span>Executors
<span class="hl kwa">import</span> java<span class="hl opt">.</span>io<span class="hl opt">.</span>InputStreamReader
<span class="hl kwa">import</span> java<span class="hl opt">.</span>nio<span class="hl opt">.</span>charset<span class="hl opt">.</span>Charset
<span class="hl kwa">import</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>regex<span class="hl opt">.</span>Pattern

<span class="hl kwa">object</span> regexdna <span class="hl opt">{</span>
  <span class="hl kwa">val</span> newSeqChars <span class="hl opt">=</span> <span class="hl str">&quot;BDHKMNRSVWY&quot;</span><span class="hl opt">.</span><span class="hl kwd">toCharArray</span><span class="hl opt">();</span>

  <span class="hl kwa">val</span> newSeqStrings <span class="hl opt">=</span> Array<span class="hl opt">[</span>String<span class="hl opt">](</span>
    <span class="hl str">&quot;(c|g|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// B</span>
    <span class="hl str">&quot;(a|g|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// D</span>
    <span class="hl str">&quot;(a|c|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// H</span>
    <span class="hl str">&quot;(g|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// K</span>
    <span class="hl str">&quot;(a|c)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// M</span>
    <span class="hl str">&quot;(a|c|g|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// N</span>
    <span class="hl str">&quot;(a|g)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// R</span>
    <span class="hl str">&quot;(c|g)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// S</span>
    <span class="hl str">&quot;(a|c|g)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// V</span>
    <span class="hl str">&quot;(a|t)&quot;</span><span class="hl opt">,</span> <span class="hl slc">// W</span>
    <span class="hl str">&quot;(c|t)&quot;</span> <span class="hl slc">// Y</span>
    <span class="hl opt">);</span>

  <span class="hl kwa">val</span> variants <span class="hl opt">=</span> <span class="hl kwd">Seq</span><span class="hl opt">(</span>
    <span class="hl str">&quot;agggtaaa|tttaccct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span><span class="hl opt">,</span>
    <span class="hl str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span><span class="hl opt">)</span>

  <span class="hl kwa">private def</span> <span class="hl kwd">readInput</span><span class="hl opt">(): (</span>Int<span class="hl opt">,</span> String<span class="hl opt">) = {</span>
    <span class="hl kwa">val</span> sb <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">StringBuilder</span><span class="hl opt">(</span><span class="hl num">10000000</span><span class="hl opt">);</span>
    <span class="hl kwa">val</span> r <span class="hl opt">=</span> <span class="hl kwa">new</span> <span class="hl kwd">BufferedReader</span><span class="hl opt">(</span><span class="hl kwa">new</span> <span class="hl kwd">InputStreamReader</span><span class="hl opt">(</span>System<span class="hl opt">.</span><span class="hl kwa">in</span><span class="hl opt">,</span> Charset<span class="hl opt">.</span><span class="hl kwd">defaultCharset</span><span class="hl opt">()));</span>

    <span class="hl kwa">var</span> commentLength<span class="hl opt">:</span> Int <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">try</span> <span class="hl opt">{</span>
      <span class="hl kwa">var</span> line<span class="hl opt">:</span> String <span class="hl opt">=</span> r<span class="hl opt">.</span><span class="hl kwd">readLine</span><span class="hl opt">();</span>
      <span class="hl kwa">while</span> <span class="hl opt">(</span>line <span class="hl opt">!=</span> null<span class="hl opt">) {</span>
        <span class="hl kwa">if</span> <span class="hl opt">(</span>line<span class="hl opt">.</span><span class="hl kwd">charAt</span><span class="hl opt">(</span><span class="hl num">0</span><span class="hl opt">) ==</span> <span class="hl str">'&gt;'</span><span class="hl opt">) {</span>
          commentLength <span class="hl opt">+=</span> line<span class="hl opt">.</span><span class="hl kwd">length</span><span class="hl opt">() +</span> <span class="hl num">1</span><span class="hl opt">;</span>
        <span class="hl opt">}</span> <span class="hl kwa">else</span> <span class="hl opt">{</span>
          sb<span class="hl opt">.</span><span class="hl kwd">append</span><span class="hl opt">(</span>line<span class="hl opt">);</span>
          commentLength <span class="hl opt">+=</span> <span class="hl num">1</span><span class="hl opt">;</span>
        <span class="hl opt">}</span>
        line <span class="hl opt">=</span> r<span class="hl opt">.</span><span class="hl kwd">readLine</span><span class="hl opt">();</span>
      <span class="hl opt">}</span>
    <span class="hl opt">}</span> <span class="hl kwa">finally</span> <span class="hl opt">{</span>
      r<span class="hl opt">.</span><span class="hl kwd">close</span><span class="hl opt">();</span>
    <span class="hl opt">}</span>

    <span class="hl kwa">val</span> result <span class="hl opt">=</span> sb<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">();</span>
    <span class="hl kwa">return</span> <span class="hl opt">(</span>result<span class="hl opt">.</span>length <span class="hl opt">+</span> commentLength<span class="hl opt">,</span> result<span class="hl opt">);</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">def</span> <span class="hl kwd">calcNewSeqLength</span><span class="hl opt">(</span>sequence<span class="hl opt">:</span> String<span class="hl opt">):</span> Int <span class="hl opt">= {</span>
    <span class="hl kwa">val</span> seqChars <span class="hl opt">=</span> sequence<span class="hl opt">.</span><span class="hl kwd">toCharArray</span><span class="hl opt">();</span>
    <span class="hl kwa">var</span> acc<span class="hl opt">:</span> Int <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">var</span> seqI<span class="hl opt">:</span> Int <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
    <span class="hl kwa">while</span> <span class="hl opt">(</span>seqI <span class="hl opt">&lt;</span> seqChars<span class="hl opt">.</span>length<span class="hl opt">) {</span>
      <span class="hl kwa">val</span> c <span class="hl opt">=</span> <span class="hl kwd">seqChars</span><span class="hl opt">(</span>seqI<span class="hl opt">)</span>
      <span class="hl kwa">val</span> i <span class="hl opt">=</span> java<span class="hl opt">.</span>util<span class="hl opt">.</span>Arrays<span class="hl opt">.</span><span class="hl kwd">binarySearch</span><span class="hl opt">(</span>newSeqChars<span class="hl opt">,</span> c<span class="hl opt">);</span>
      acc <span class="hl opt">+= (</span><span class="hl kwa">if</span> <span class="hl opt">(</span>i <span class="hl opt">&gt;=</span> <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl kwd">newSeqStrings</span><span class="hl opt">(</span>i<span class="hl opt">).</span><span class="hl kwd">length</span><span class="hl opt">()</span> <span class="hl kwa">else</span> <span class="hl num">1</span><span class="hl opt">);</span>
      seqI <span class="hl opt">+=</span> <span class="hl num">1</span><span class="hl opt">;</span>
    <span class="hl opt">}</span>
    <span class="hl kwa">return</span> acc<span class="hl opt">;</span>
  <span class="hl opt">}</span>

  <span class="hl kwa">def</span> <span class="hl kwd">countVariantOccurences</span><span class="hl opt">(</span>sequence<span class="hl opt">:</span> String<span class="hl opt">,</span> variant<span class="hl opt">:</span> String<span class="hl opt">):</span> Int <span class="hl opt">= {</span>
	<span class="hl kwa">var</span> count<span class="hl opt">:</span> Int <span class="hl opt">=</span> <span class="hl num">0</span><span class="hl opt">;</span>
	<span class="hl kwa">val</span> m <span class="hl opt">=</span> Pattern<span class="hl opt">.</span><span class="hl kwd">compile</span><span class="hl opt">(</span>variant<span class="hl opt">).</span><span class="hl kwd">matcher</span><span class="hl opt">(</span>sequence<span class="hl opt">);</span>
	<span class="hl kwa">while</span> <span class="hl opt">(</span>m<span class="hl opt">.</span><span class="hl kwd">find</span><span class="hl opt">()) {</span>
		count <span class="hl opt">+=</span> <span class="hl num">1</span><span class="hl opt">;</span>
	<span class="hl opt">}</span>
	count<span class="hl opt">;</span>
  <span class="hl opt">}</span>
  
  <span class="hl kwa">def</span> <span class="hl kwd">slowCountVariantOccurences</span><span class="hl opt">(</span>sequence<span class="hl opt">:</span> String<span class="hl opt">,</span> variant<span class="hl opt">:</span> String<span class="hl opt">):</span> Int <span class="hl opt">=</span> sequence<span class="hl opt">.</span>r<span class="hl opt">.</span><span class="hl kwd">findAllIn</span><span class="hl opt">(</span>sequence<span class="hl opt">).</span>length

  <span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl opt">(</span>args<span class="hl opt">:</span> Array<span class="hl opt">[</span>String<span class="hl opt">]):</span> Unit <span class="hl opt">= {</span>
    <span class="hl kwa">val</span> es <span class="hl opt">=</span> Executors<span class="hl opt">.</span><span class="hl kwd">newFixedThreadPool</span><span class="hl opt">(</span>variants<span class="hl opt">.</span>length <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">);</span>
    implicit <span class="hl kwa">val</span> ec <span class="hl opt">=</span> ExecutionContext<span class="hl opt">.</span><span class="hl kwd">fromExecutorService</span><span class="hl opt">(</span>es<span class="hl opt">);</span>

    <span class="hl kwa">val</span> <span class="hl opt">(</span>inputLength<span class="hl opt">,</span> sequence<span class="hl opt">) =</span> <span class="hl kwd">readInput</span><span class="hl opt">();</span>

    <span class="hl kwa">val</span> newSeqLengthFuture <span class="hl opt">=</span> future <span class="hl opt">{</span> <span class="hl kwd">calcNewSeqLength</span><span class="hl opt">(</span>sequence<span class="hl opt">) }</span>
    <span class="hl kwa">val</span> futures <span class="hl opt">=</span> variants<span class="hl opt">.</span><span class="hl kwd">map</span><span class="hl opt">(</span>v <span class="hl opt">=&gt;</span> future <span class="hl opt">{</span> <span class="hl kwd">countVariantOccurences</span><span class="hl opt">(</span>sequence<span class="hl opt">,</span> v<span class="hl opt">) })</span>

    <span class="hl kwa">val</span> duration <span class="hl opt">=</span> <span class="hl kwd">Duration</span><span class="hl opt">(</span><span class="hl num">999</span><span class="hl opt">,</span> HOURS<span class="hl opt">)</span>
    <span class="hl kwa">val</span> newSeqLength <span class="hl opt">=</span> Await<span class="hl opt">.</span><span class="hl kwd">result</span><span class="hl opt">(</span>newSeqLengthFuture<span class="hl opt">,</span> duration<span class="hl opt">);</span>
    <span class="hl kwa">val</span> counts <span class="hl opt">=</span> futures<span class="hl opt">.</span><span class="hl kwd">map</span><span class="hl opt">(</span>f <span class="hl opt">=&gt;</span> Await<span class="hl opt">.</span><span class="hl kwd">result</span><span class="hl opt">(</span>f<span class="hl opt">,</span> duration<span class="hl opt">))</span>

    es<span class="hl opt">.</span><span class="hl kwd">shutdown</span><span class="hl opt">();</span>

    <span class="hl kwa">for</span> <span class="hl opt">(</span>t <span class="hl opt">&lt;-</span> variants zip counts<span class="hl opt">) {</span>
      System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>t<span class="hl opt">.</span>_1 <span class="hl opt">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl opt">+</span> t<span class="hl opt">.</span>_2<span class="hl opt">);</span>
    <span class="hl opt">}</span>
    System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">();</span>
    System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>inputLength<span class="hl opt">);</span>
    System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>sequence<span class="hl opt">.</span>length<span class="hl opt">);</span>
    System<span class="hl opt">.</span>out<span class="hl opt">.</span><span class="hl kwd">println</span><span class="hl opt">(</span>newSeqLength<span class="hl opt">);</span>
  <span class="hl opt">}</span>
<span class="hl opt">}</span>
