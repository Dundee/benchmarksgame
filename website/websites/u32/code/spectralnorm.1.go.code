<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by chaishushan</span>
<span class="hl com"> * Based on spectral-norm.go by The Go Authors.</span>
<span class="hl com"> */</span>

<span class="hl kwa">package</span> main

<span class="hl kwa">import</span> <span class="hl opt">(</span>
   <span class="hl str">&quot;flag&quot;</span>
   <span class="hl str">&quot;fmt&quot;</span>
   <span class="hl str">&quot;math&quot;</span>
<span class="hl opt">)</span>

<span class="hl kwa">var</span> n <span class="hl opt">=</span> flag<span class="hl opt">.</span><span class="hl kwd">Int</span><span class="hl opt">(</span><span class="hl str">&quot;n&quot;</span><span class="hl opt">,</span> <span class="hl num">2000</span><span class="hl opt">,</span> <span class="hl str">&quot;count&quot;</span><span class="hl opt">)</span>

<span class="hl kwa">func</span> <span class="hl kwd">evalA</span><span class="hl opt">(</span>i<span class="hl opt">,</span> j <span class="hl kwb">int</span><span class="hl opt">)</span> <span class="hl kwb">int</span> <span class="hl opt">{</span> <span class="hl kwa">return</span> <span class="hl opt">((</span>i<span class="hl opt">+</span>j<span class="hl opt">)*(</span>i<span class="hl opt">+</span>j<span class="hl opt">+</span><span class="hl num">1</span><span class="hl opt">)/</span><span class="hl num">2</span> <span class="hl opt">+</span> i <span class="hl opt">+</span> <span class="hl num">1</span><span class="hl opt">) }</span>

<span class="hl kwa">type</span> Vec <span class="hl opt">[]</span><span class="hl kwb">float64</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>v Vec<span class="hl opt">)</span> <span class="hl kwd">Times</span><span class="hl opt">(</span>u Vec<span class="hl opt">) {</span>
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> <span class="hl kwb">len</span><span class="hl opt">(</span>v<span class="hl opt">);</span> i<span class="hl opt">++ {</span>
      v<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl num">0</span>
      <span class="hl kwa">for</span> j <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> j <span class="hl opt">&lt;</span> <span class="hl kwb">len</span><span class="hl opt">(</span>u<span class="hl opt">);</span> j<span class="hl opt">++ {</span>
         v<span class="hl opt">[</span>i<span class="hl opt">] +=</span> u<span class="hl opt">[</span>j<span class="hl opt">] /</span> <span class="hl kwb">float64</span><span class="hl opt">(</span><span class="hl kwd">evalA</span><span class="hl opt">(</span>i<span class="hl opt">,</span> j<span class="hl opt">))</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>v Vec<span class="hl opt">)</span> <span class="hl kwd">TimesTransp</span><span class="hl opt">(</span>u Vec<span class="hl opt">) {</span>
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> <span class="hl kwb">len</span><span class="hl opt">(</span>v<span class="hl opt">);</span> i<span class="hl opt">++ {</span>
      v<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl num">0</span>
      <span class="hl kwa">for</span> j <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> j <span class="hl opt">&lt;</span> <span class="hl kwb">len</span><span class="hl opt">(</span>u<span class="hl opt">);</span> j<span class="hl opt">++ {</span>
         v<span class="hl opt">[</span>i<span class="hl opt">] +=</span> u<span class="hl opt">[</span>j<span class="hl opt">] /</span> <span class="hl kwb">float64</span><span class="hl opt">(</span><span class="hl kwd">evalA</span><span class="hl opt">(</span>j<span class="hl opt">,</span> i<span class="hl opt">))</span>
      <span class="hl opt">}</span>
   <span class="hl opt">}</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl opt">(</span>v Vec<span class="hl opt">)</span> <span class="hl kwd">ATimesTransp</span><span class="hl opt">(</span>u Vec<span class="hl opt">) {</span>
   x <span class="hl opt">:=</span> <span class="hl kwb">make</span><span class="hl opt">(</span>Vec<span class="hl opt">,</span> <span class="hl kwb">len</span><span class="hl opt">(</span>u<span class="hl opt">))</span>
   x<span class="hl opt">.</span><span class="hl kwd">Times</span><span class="hl opt">(</span>u<span class="hl opt">)</span>
   v<span class="hl opt">.</span><span class="hl kwd">TimesTransp</span><span class="hl opt">(</span>x<span class="hl opt">)</span>
<span class="hl opt">}</span>

<span class="hl kwa">func</span> <span class="hl kwd">main</span><span class="hl opt">() {</span>
   flag<span class="hl opt">.</span><span class="hl kwd">Parse</span><span class="hl opt">()</span>

   N <span class="hl opt">:= *</span>n
   u <span class="hl opt">:=</span> <span class="hl kwb">make</span><span class="hl opt">(</span>Vec<span class="hl opt">,</span> N<span class="hl opt">)</span>
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> N<span class="hl opt">;</span> i<span class="hl opt">++ {</span>
      u<span class="hl opt">[</span>i<span class="hl opt">] =</span> <span class="hl num">1</span>
   <span class="hl opt">}</span>
   v <span class="hl opt">:=</span> <span class="hl kwb">make</span><span class="hl opt">(</span>Vec<span class="hl opt">,</span> N<span class="hl opt">)</span>
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> <span class="hl num">10</span><span class="hl opt">;</span> i<span class="hl opt">++ {</span>
      v<span class="hl opt">.</span><span class="hl kwd">ATimesTransp</span><span class="hl opt">(</span>u<span class="hl opt">)</span>
      u<span class="hl opt">.</span><span class="hl kwd">ATimesTransp</span><span class="hl opt">(</span>v<span class="hl opt">)</span>
   <span class="hl opt">}</span>
   <span class="hl kwa">var</span> vBv<span class="hl opt">,</span> vv <span class="hl kwb">float64</span>
   <span class="hl kwa">for</span> i <span class="hl opt">:=</span> <span class="hl num">0</span><span class="hl opt">;</span> i <span class="hl opt">&lt;</span> N<span class="hl opt">;</span> i<span class="hl opt">++ {</span>
      vBv <span class="hl opt">+=</span> u<span class="hl opt">[</span>i<span class="hl opt">] *</span> v<span class="hl opt">[</span>i<span class="hl opt">]</span>
      vv <span class="hl opt">+=</span> v<span class="hl opt">[</span>i<span class="hl opt">] *</span> v<span class="hl opt">[</span>i<span class="hl opt">]</span>
   <span class="hl opt">}</span>
   fmt<span class="hl opt">.</span><span class="hl kwd">Printf</span><span class="hl opt">(</span><span class="hl str">&quot;%0.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">,</span> math<span class="hl opt">.</span><span class="hl kwd">Sqrt</span><span class="hl opt">(</span>vBv<span class="hl opt">/</span>vv<span class="hl opt">))</span>
<span class="hl opt">}</span>
