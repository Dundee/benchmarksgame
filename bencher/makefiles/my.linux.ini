# The Computer Language Benchmarks Game

[tools]

PYTHON = /usr/bin/python2
PYPY = /usr/bin/pypy
PYTHON3 = /usr/bin/python3
PYTHONDEV = /usr/bin/python3.10
PYPY3 = /usr/bin/pypy3
JYTHON = /usr/bin/jython
NUITKA = /usr/bin/nuitka3
SHEDSKIN = /usr/bin/shedskin
PYSTON = /usr/bin/pyston
IPY = /usr/bin/mono /opt/ipy/ipy.exe
MICROPYTHON = /usr/bin/micropython
GRAAL = /usr/lib/jvm/java-8-graalvm/bin/graalpython
RUSTPYTHON = /usr/bin/rustpython

[commandlines]

; commandlines are split on spaces, so "a b" and 'a b' will be split

; %X %T %B %I %A in commandlines are replaced like this:
;
; nbody.python-4.python %X = nbody.python-4.python
; nbody.python-4.python %T = nbody
; nbody.python-4.python %B = nbody.python-4
; nbody.python-4.python %I = 4
;
; %A = [testrange] value or 0 when the program takes input from stdin

python3 = ${tools:PYTHON3} %X %A
python-dev = ${tools:PYTHONDEV} %X %A
pypy3 = ${tools:PYPY3} %X %A
python = ${tools:PYTHON} %X %A
pypy = ${tools:PYPY} %X %A
jython = ${tools:JYTHON} %X %A
cython = ${tools:PYTHON3} -c "import %T" %A
nuitka = ./%X %A
shedskin = ./shed %A
numba = ${tools:PYTHON3} %X %A
pyston = ${tools:PYSTON} %X %A
ipy = ${tools:IPY} %X %A
micropython = ${tools:MICROPYTHON} %X %A
grumpy = ./%X %A
graal = ${tools:GRAAL} %X %A
rustpython = ${tools:RUSTPYTHON} %X %A

;;; 3) WHICH PROGRAMS AND LANGUAGE IMPLEMENTATIONS SHOULD BE MEASURED?

[filters]

; ONLYDIRS explicitly listed are searched for source code files

onlydirs =
 binarytrees
 chameneosredux
 fannkuchredux
 fasta
 fastaredux
 fibonacci
 fib50
 iobench
 jsonbench
 knucleotide
 mandelbrot
 meteor
 nbody
 pidigits
 pystone
 regexdna
 revcomp
 richards
 spectralnorm
 templates
 threadring


; ALLOW these helper file extensions to be available unchanged
; from the working directory - they will never be measured

allow =



; ONLY measure files with these extensions
; if there are none, measure files with any extension not ALLOWed or IGNOREd

only =


; IGNORE files with these extensions, if there are no ONLY extensions

ignore =
 txt


[alias]

; x = y z - additionally measure source file x with implementations y and z
python3 = pypy3 nuitka pyston python-dev micropython graal rustpython
python = pypy jython shedskin ipy grumpy

[build]

make =
 cython
 nuitka
 shedskin
 grumpy

;;; 4) WHAT DATA VALUES SHOULD THE PROGRAMS BE MEASURED FOR?

[testrange]

binarytrees = 14
chameneosredux = 6000000
fannkuchredux = 10
fasta = 2500000
fastaredux = 2500000
fibonacci = 1000000
fib50 = 1000000
iobench = 1
jsonbench = 1
knucleotide = 10000
mandelbrot = 16000
meteor = 2098
nbody = 5000000
pidigits = 10000
pystone = 50000
regexdna = 10000
revcomp = 1000
richards = 10
spectralnorm = 550
templates = 1000
threadring = 5000000



[testdata]

knucleotide = ../knucleotide-input.txt
regexdna = ../regexdna-input.txt
revcomp = ../revcomp-input.txt


[outputcheck]

notchecked = chameneosredux iobench

binarycmp =


[ndiff_outputcheck]

nbody = -abserr 1.0e-8
partialsums = -abserr 1.0e-8


[measure]

runs = 3
repeatevery = False
maxtime = 300
cutoff = 120
logfilemax = 102400
delay = 0.2

[dirs]






